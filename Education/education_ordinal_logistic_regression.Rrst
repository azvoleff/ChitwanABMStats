===============================================================================
Education Ordinal Logistic Regression
===============================================================================

:Author: Alex Zvoleff
:Date: July, 2012

Runs an ordinal logistic regression to be used in the ChitwanABM to set the 
years of education of each agent, based on their attributes, during each model 
run.

.. {r setup_reST_options, echo=FALSE, cache=FALSE}
require(knitr)
# Setup knitr options:
options(width = 75)
opts_chunk$set(cache=TRUE, cache.path='knitr-cache/', fig.path='knitr-figure/',
    fig.width=4.5, fig.height=3, out.width='4.5in', out.height='3in', dpi=300, 
    dev='pdf')
.. ..

Setup and Load Data
===============================================================================
.. {r setup, results='hide', cache=FALSE}
library(ggplot2)
library(rms) # Note 'Design' package was renamed to "rms"
library(foreign)
library(mlogit)
library(arm)

source("../Event_History_Analysis/export_model_to_rcparam.R")

theme_set(theme_grey(base_size=11))
update_geom_defaults("smooth", aes(size=1))
update_geom_defaults("line", aes(size=1))
DPI <- 300
WIDTH <- 9
HEIGHT <- 5.67
.. ..

.. {r load-data, cache=FALSE}
lu <- read.xport("W:/Nepal/ICPSR_SupplementalData/Survey_converted/landuse.xpt")
land.agveg <- with(lu, rowSums(cbind(BARI1, IKHET1, RKHET1)))
land.nonagveg <- with(lu, rowSums(cbind(GRASSC1, GRASSP1, PLANTC1, PLANTP1)))
land.privbldg <- with(lu, rowSums(cbind(HHRESID1, MILL1, OTRBLD1)))
land.pubbldg <- with(lu, rowSums(cbind(ROAD1, SCHOOL1, TEMPLE1)))
land.other <- with(lu, rowSums(cbind(CANAL1, POND1, RIVER1, SILT1, UNDVP1)))
lu.processed <- data.frame(NEIGHID=lu$NEIGHID, land.agveg, land.nonagveg, land.privbldg, land.pubbldg, land.other)
# Convert land areas expressed in square feet to square meters
lu.processed[2:6]  <- lu.processed[2:6] * .09290304
lu.processed$NEIGHID <- as.numeric(lu.processed$NEIGHID)
lu.processed$land.total <- apply(lu.processed[2:6], 1, sum)
percagveg <- with(lu.processed, data.frame(neighid=NEIGHID, percagveg=(land.agveg/land.total)*100))
percagveg$log_percagveg <- log(percagveg$percagveg + 1)

# Read in the household registry data to get the ethnicities
load("W:/Nepal/CVFS_HHReg/hhreg126.Rdata")
columns <- grep('^(respid|ethnic)$', names(hhreg))
hhreg <- hhreg[columns]
hhreg$ethnic <- factor(hhreg$ethnic, levels=c(1,2,3,4,5,6), labels=c("UpHindu",
        "HillTibeto", "LowHindu", "Newar", "TeraiTibeto", "Other"))
# Drop "other" ethnicity for consistency with Massey et al. (2010)
hhreg <- hhreg[!(hhreg$ethnic=="Other"),]
hhreg$ethnic <- factor(hhreg$ethnic)

# Read in t1 individual interview data to get years of schooling, age, gender, 
# etc.
t1indiv <- read.xport("W:/Nepal/ICPSR_0538_Restricted/da04538-0012_REST.xpt")
# To merge with the hhreg data, need to convert the old format respondent ID 
# (NNNHHSS) (where NNN is NBH ID, HH is household ID, and SS is subject ID) to 
# NNNHHHSSS:
old_respID <- sprintf("%07i", t1indiv$RESPID)
NBHID <- sprintf("%03i", as.numeric(substr(old_respID,1,3)))
HHID <- sprintf("%03i", as.numeric(substr(old_respID,4,5)))
SUBJID <- sprintf("%03i", as.numeric(substr(old_respID,6,7)))
t1indiv$RESPID <- paste(NBHID, HHID, SUBJID, sep="")

educdata <- with(t1indiv, data.frame(respid=RESPID, neighid=NEIGHID, schooling=A1, age=RESPAGE, gender=GENDER, mother_school=I7, father_school=I11))
educdata$gender <- factor(educdata$gender, labels=c("male", "female"))

# Eliminate missing value codes:
educdata$mother_school[educdata$mother_school < 0] <- NA
educdata$father_school[educdata$father_school < 0] <- NA

educdata <- merge(educdata, hhreg, all.x=TRUE, all.y=FALSE)
educdata <- merge(educdata, percagveg)
educdata_all_respondents <- educdata 
educdata <- educdata[educdata$age >= 25 &  educdata$age <= 30,]

# Load neighborhood distances data:
load("W:/Nepal/ICPSR_0538_Restricted/Recode/recoded_NBH_data.Rdata")
nbh_recode$NEIGHID <- as.numeric(nbh_recode$NEIGHID)
educdata <- merge(educdata, nbh_recode, by.x="neighid", by.y="NEIGHID")

# Load neighborhood history data to get minutes on foot to nearest school
neighhist <- read.xport("W:/Nepal/ICPSR_0538_Restricted/da04538-0014_REST.xpt")
neighhist <- with(neighhist, data.frame(neighid=NEIGHID, schlftmin1996=SCHLFT52))

# Add a categorical years of schooling variable
educdata$schooling_cat <- educdata$schooling
educdata$schooling_cat[educdata$schooling == 0] <- 'eq0'
educdata$schooling_cat[educdata$schooling > 0 & educdata$schooling <= 4] <- 'gt0lt4'
educdata$schooling_cat[educdata$schooling > 4 & educdata$schooling <= 8] <- 'gt4lt8'
educdata$schooling_cat[educdata$schooling > 8 & educdata$schooling <= 11] <- 'gt8lt11'
educdata$schooling_cat[educdata$schooling > 11] <- 'gt11'
educdata$schooling_cat <- factor(educdata$schooling_cat, levels=c('eq0', 'gt0lt4', 'gt4lt8', 'gt8lt11', 'gt11'), ordered=TRUE)

educdata <- educdata[complete.cases(educdata),]
.. ..

Basic Stats
===============================================================================

First run some crosstabs to ensure sample size is large enough in each of the 
predictor variables.

.. {r basic_stats}
summary(educdata$schooling)
sd(educdata$schooling, na.rm=T)
table(educdata$schooling_cat)
with(educdata, xtabs(~ schooling_cat + age))
with(educdata, xtabs(~ schooling_cat + gender))
with(educdata, xtabs(~ schooling_cat + ethnic))
with(educdata, xtabs(~ schooling_cat + mother_school))
with(educdata, xtabs(~ schooling_cat + father_school))
.. ..

Don't include distance in minutes on foot to a school as a covariate as every 
neighborhood has a school close by. The max distance in minutes on foot is only 
:r:`max(neighhist$schlftmin1996)`, and the mean distance in minutes on foot is 
:r:`mean(neighhist$schlftmin1996)`.

.. {r schlftmin-table}
table(neighhist$schlftmin1996)
.. ..

When do people start school? Plot the years of schooling obtained for people 
from age 0-10 to see the earliest people start have years of schooling 
reported.
.. {r start-schooling-age}
children_rows <- educdata_all_respondents$age <= 20
max_start_age <- educdata_all_respondents$age - educdata_all_respondents$schooling
table(max_start_age)
xtabs(~ schooling + age, data=educdata_all_respondents[children_rows,])
.. ..

Results
===============================================================================

Ordinal Logistic Regression
_______________________________________________________________________________

First try an ordinal logistic regression using `lrm` from the `rms` package.
.. {r results-lrm}
educdata_dist <- with(educdata, datadist(gender, ethnic, avg_yrs_services_lt15))
options(datadist='educdata_dist')
(lrm_schooling_cat <- lrm(schooling_cat ~ gender + ethnic + avg_yrs_services_lt15, 
        data=educdata))
summary(lrm_schooling_cat)
lrm_schooling_cat_odds <- cbind(odds_ratio=exp(coef(lrm_schooling_cat)), exp(confint.default(lrm_schooling_cat)))
(lrm_schooling_cat_odds <- round(lrm_schooling_cat_odds, 4))
AIC(lrm_schooling_cat)
write.csv(summary(lrm_schooling_cat), file="lrm_schooling_cat.csv")

export_to_model_param(lrm_schooling_cat, "lrm_schooling_cat_rcfile.txt", 
                      "education.coef", "rcfile")
export_to_model_param(lrm_schooling_cat, "lrm_schooling_cat_rcparams_default.txt", 
                      "education.coef", "rcparams.default")
.. ..

Run another model without the NFO covariate, for comparison.
.. {r results-lrm-no-nfos}
educdata_dist <- with(educdata, datadist(gender, ethnic))
options(datadist='educdata_dist')
(lrm_schooling_cat_no_nfos <- lrm(schooling_cat ~ gender + ethnic, 
        data=educdata))
summary(lrm_schooling_cat_no_nfos)
lrm_schooling_cat_no_nfos_odds <- cbind(odds_ratio=exp(coef(lrm_schooling_cat_no_nfos)), exp(confint.default(lrm_schooling_cat_no_nfos)))
(lrm_schooling_cat_no_nfos_odds <- round(lrm_schooling_cat_no_nfos_odds, 4))
AIC(lrm_schooling_cat_no_nfos)
write.csv(summary(lrm_schooling_cat_no_nfos), file="lrm_schooling_cat_no_nfos.csv")

export_to_model_param(lrm_schooling_cat_no_nfos, "lrm_schooling_cat_no_nfos_rcfile.txt", 
                      "education.coef", "rcfile")
export_to_model_param(lrm_schooling_cat_no_nfos, "lrm_schooling_cat_no_nfos_rcparams_default.txt", 
                      "education.coef", "rcparams.default")
.. ..


Check the ordinality assumption by plotting mean of education versus mean X:

.. {r meaneduc_vs_gender}
qplot(gender, schooling, data=educdata, stat="summary", fun.y="mean")
.. ..

.. {r meaneduc_vs_ethnic}
qplot(ethnic, schooling, data=educdata, stat="summary", fun.y="mean")
.. ..

.. {r meaneduc_vs_percagveg}
qplot(avg_yrs_services_lt15, schooling, data=educdata, stat="summary", fun.y="mean")
.. ..

.. {r test_ordinality_assumption}
par(mfrow=c(2,2))
plot.xmean.ordinaly(schooling_cat ~ gender + ethnic + log_percagveg, 
data=educdata, topcats=2)
par(mfrow=c(1,1))
.. ..

Multinomial Logistic Regression
_______________________________________________________________________________
Now try a multinomial logistic regression using `mlogit` from the `mlogit` package.
.. {r results-mlogit}
educdata.mlogit <- mlogit.data(educdata, varying=NULL, choice="schooling_cat", shape="wide")
mlogit_schooling_cat <- mlogit(schooling_cat ~ 1| gender + ethnic + log_percagveg, data=educdata.mlogit)
summary(mlogit_schooling_cat)
mlogit_schooling_cat_odds <- cbind(odds_ratio=exp(coef(mlogit_schooling_cat)), exp(confint.default(mlogit_schooling_cat)))
(mlogit_schooling_cat_odds <- round(mlogit_schooling_cat_odds, 4))
write.csv(summary(lrm_schooling_cat), file="lrm_schooling_cat.csv")
.. ..

Now test the independence of irrelevant alternatives (IIA) with Hausman McFadden test:
.. {r hausman-mcfadden-test}
mlogit1 <- mlogit(schooling_cat ~ 1| gender + ethnic + log_percagveg, data = educdata.mlogit, reflevel="eq0")
mlogit2 <- mlogit(schooling_cat ~ 1| gender + ethnic + log_percagveg, data = educdata.mlogit, reflevel="eq0", alt.subset=c("eq0", "gt0lt4"))
mlogit3 <- mlogit(schooling_cat ~ 1| gender + ethnic + log_percagveg, data = educdata.mlogit, reflevel="eq0", alt.subset=c("eq0", "gt8lt11"))
hmftest(mlogit1, mlogit2)
hmftest(mlogit1, mlogit3)
.. ..
